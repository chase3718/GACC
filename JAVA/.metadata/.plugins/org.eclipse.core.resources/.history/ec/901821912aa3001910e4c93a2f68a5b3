package com.itemmanager.web;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.itemmanager.business.Item;
import com.itemmanager.business.JsonResponse;
import com.itemmanager.db.ItemRepository;;

@CrossOrigin
@RestController
@RequestMapping("/items")
public class ItemController {
	@Autowired
	private ItemRepository itemRepo;
	
	@GetMapping("/")
	public JsonResponse getAll() {
		JsonResponse jr = null;
		try {
			jr = JsonResponse.getInstance(itemRepo.findAll());
		} catch (Exception e) {
			jr = JsonResponse.getInstance(e);
		}
		return jr;
	}
	
	@GetMapping("/{id}")
	public JsonResponse get(@PathVariable int id) {
		JsonResponse jr = null;
		try {
			Optional<Item> i = itemRepo.findById(id);
			if (i.isPresent()) {
				jr = JsonResponse.getInstance(i);
			} else {
				jr = JsonResponse.getInstance("No item found with id: " + id);
			}
		} catch (Exception e) {
			jr = JsonResponse.getInstance(e);
		}
		return jr;
	}
	
	@PostMapping("/")
	public JsonResponse add(@RequestBody Item Item) {
		JsonResponse jr = null;
		try {
			jr = JsonResponse.getInstance(itemRepo.save(Item));
		} catch (Exception e) {
			jr = JsonResponse.getInstance(e);
		}
		return jr;
	}

	@DeleteMapping("/")
	public JsonResponse delete(@RequestBody Item Item) {
		JsonResponse jr = null;
		try {
			if (itemRepo.existsById(Item.getId())) {
				itemRepo.delete(Item);
				jr = JsonResponse.getInstance("Item deleted");
			} else {
				jr = JsonResponse.getInstance("No Item: " + Item);
			}
		} catch (Exception e) {
			jr = JsonResponse.getInstance(e);
		}
		return jr;
	}

	@PutMapping("/")
	public JsonResponse update(@RequestBody Item Item) {
		JsonResponse jr = null;
		try {
			if (itemRepo.existsById(Item.getId())) {
				jr = JsonResponse.getInstance(itemRepo.save(Item));
			} else {
				jr = JsonResponse.getInstance("No Item exists with id: " + Item.getId());
			}
		} catch (Exception e) {
			jr = JsonResponse.getInstance(e);
		}
		return jr;
	}
}
